---
import MainLayout from "../layouts/MainLayout.astro";
import Hero from "../components/Hero.astro";
import BigJourneys from "../components/BigJourneys.astro";
import MiniJourneys from "../components/MiniJourneys.astro";
import JourneyActivities from "../components/JourneyActivities.astro";
import StudentStories from "../components/StudentStories.astro";
import SocialFeed from "../components/SocialFeed.astro";
import Sustainability from "../components/Sustainability.astro";
import SignupForm from "../components/SignupForm.astro";
import Heading from "../components/Heading.astro";
import Text from "../components/Text.astro";
import InfoMeeting from "../components/InfoMeeting.astro";
---

<MainLayout title="HÃ¸jskolendk-team6">
  <!-- Scroll Progress Bar -->
  <div
    id="scroll-progress"
    class="fixed top-0 left-0 h-1 bg-gradient-to-r from-primary to-orange-400 z-50 transition-all duration-100"
    style="width: 0%; box-shadow: 0 0 10px rgba(255, 89, 0, 0.5);"
  >
  </div>

  <!-- Bitmap graphics background -->
  <div class="fixed inset-0 pointer-events-none z-0 overflow-hidden">
    <!-- Particle Canvas for bitmap graphics -->
    <canvas id="particle-canvas" class="w-full h-full" style="opacity: 0.2;"
    ></canvas>
  </div>

  <!-- /*************************************************/ HERO /*************************************************/ -->
  <section id="hero" class="animate-section opacity-0" data-animation="fade-up">
    <Hero />
  </section>

  <!-- /*************************************************/ BIG JOURNEYS /*************************************************/ -->
  <section id="big-journeys">
    <BigJourneys />
  </section>

  <!-- /*************************************************/ MINI JOURNEYS /*************************************************/ -->
  <section
    id="mini-journeys"
    class="animate-section opacity-0"
    data-animation="fade-up"
  >
    <MiniJourneys />
  </section>

  <!-- /*************************************************/ GIF SECTION 1 /*************************************************/ -->

  <img
    src="/img/flyrute1.gif"
    alt="Flyrute"
    class="w-full block animate-section opacity-0"
    data-animation="scale"
  />

  <!-- /*************************************************/ INFOMEETING /*************************************************/ -->

  <section><InfoMeeting /></section>
  <!-- /*************************************************/ JOURNEY ACTIVITIES /*************************************************/ -->
  <section id="journey-activities">
    <JourneyActivities />
  </section>

  <!-- /*************************************************/ GIF SECTION 2 /*************************************************/ -->
  <img
    src="/img/flyrute2.gif"
    alt="Flyrute"
    class="w-full block animate-section opacity-0"
    data-animation="scale"
  />

  <!-- /*************************************************/ STUDENT STORIES /*************************************************/ -->
  <section
    id="student-stories"
    aria-label="Elevhistorier"
    class="animate-section opacity-0"
    data-animation="fade-up"
  >
    <StudentStories />
  </section>

  <!-- /*************************************************/ GIF SECTION 3 /*************************************************/ -->
  <img
    src="/img/flyrute3.gif"
    alt="Flyrute"
    class="w-full block animate-section opacity-0"
    data-animation="scale"
  />

  <!-- /*************************************************/ SOCIAL MEDIA /*************************************************/ -->
  <section
    id="social"
    class="animate-section opacity-0"
    data-animation="fade-up"
  >
    <SocialFeed />
  </section>

  <!-- /*************************************************/ GIF SECTION 4 /*************************************************/ -->

  <img
    src="/img/flyrute4.gif"
    alt="Flyrute"
    class="w-full block animate-section opacity-0"
    data-animation="scale"
  />

  <!-- /*************************************************/ THOUGHTFUL / SUSTAINABILITY /*************************************************/ -->
  <section
    id="sustainability"
    class="animate-section opacity-0"
    data-animation="fade-up"
  >
    <Sustainability />
  </section>

  <!-- /*************************************************/ GIF SECTION 5 /*************************************************/ -->
  <img
    src="/img/flyrute5.gif"
    alt="Flyrute"
    class="w-full block animate-section opacity-0"
    data-animation="scale"
  />

  <!-- /*************************************************/ SIGNUP FORM /*************************************************/ -->
  <section
    id="signup"
    class="animate-section opacity-0"
    data-animation="fade-up"
  >
    <SignupForm />

    <!-- /*************************************************/ GIF SECTION 6 /*************************************************/ -->

    <img src="/img/flyrute4.gif" alt="Flyrute" class="w-full block" />
  </section>
</MainLayout>

<style>
  /* Animation keyframes */
  @keyframes fadeUp {
    from {
      opacity: 0;
      transform: translateY(40px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  @keyframes scaleIn {
    from {
      opacity: 0;
      transform: scale(0.95);
    }
    to {
      opacity: 1;
      transform: scale(1);
    }
  }

  /* Animation classes */
  .animate-section {
    transition: all 0.8s cubic-bezier(0.4, 0, 0.2, 1);
  }

  .animate-section.visible {
    opacity: 1 !important;
  }

  .animate-section[data-animation="fade-up"].visible {
    animation: fadeUp 0.8s cubic-bezier(0.4, 0, 0.2, 1) forwards;
  }

  .animate-section[data-animation="scale"].visible {
    animation: scaleIn 0.8s cubic-bezier(0.4, 0, 0.2, 1) forwards;
  }

  /* Particle canvas */
  #particle-canvas {
    mix-blend-mode: screen;
  }

  /* Ensure relative positioning for content above particles */
  section {
    position: relative;
    z-index: 1;
  }

  /* Pulse animation for scroll progress */
  @keyframes pulse-glow {
    0%,
    100% {
      box-shadow: 0 0 10px rgba(255, 89, 0, 0.5);
    }
    50% {
      box-shadow: 0 0 20px rgba(255, 89, 0, 0.8);
    }
  }

  #scroll-progress {
    animation: pulse-glow 2s ease-in-out infinite;
  }

  /* Hover effect for GIF images */
  img[src*="flyrute"] {
    transition: transform 0.4s cubic-bezier(0.4, 0, 0.2, 1);
  }

  img[src*="flyrute"]:hover {
    transform: scale(1.02);
  }
</style>

<script>
  // Intersection Observer for scroll animations
  const observerOptions = {
    threshold: 0.1,
    rootMargin: "0px 0px -100px 0px",
  };

  const observer = new IntersectionObserver((entries) => {
    entries.forEach((entry) => {
      if (entry.isIntersecting) {
        entry.target.classList.add("visible");
      }
    });
  }, observerOptions);

  // Initialize on page load
  document.addEventListener("DOMContentLoaded", () => {
    // Observe all animation sections
    const sections = document.querySelectorAll(".animate-section");
    sections.forEach((section) => observer.observe(section));

    // Initialize particle system
    initParticles();

    // Hero section entrance animation
    setTimeout(() => {
      const heroSection = document.getElementById("hero");
      if (heroSection) {
        heroSection.classList.add("visible");
      }
    }, 300);
  });

  // Bitmap-based particle system
  function initParticles() {
    const canvas = document.getElementById(
      "particle-canvas"
    ) as HTMLCanvasElement;
    if (!canvas) return;

    const ctx = canvas.getContext("2d");
    if (!ctx) return;

    // Set canvas size
    const resizeCanvas = () => {
      canvas.width = window.innerWidth;
      canvas.height = document.documentElement.scrollHeight;
    };
    resizeCanvas();
    window.addEventListener("resize", resizeCanvas);

    // Particle class
    class Particle {
      x: number;
      y: number;
      size: number;
      speedX: number;
      speedY: number;
      color: string;

      constructor() {
        this.x = Math.random() * canvas.width;
        this.y = Math.random() * canvas.height;
        this.size = Math.random() * 3 + 1;
        this.speedX = Math.random() * 0.5 - 0.25;
        this.speedY = Math.random() * 0.5 - 0.25;

        // Orange color variations for bitmap effect
        const colors = ["#ff5900", "#ff7700", "#ff8800"];
        this.color = colors[Math.floor(Math.random() * colors.length)];
      }

      update() {
        this.x += this.speedX;
        this.y += this.speedY;

        // Wrap around edges
        if (this.x > canvas.width) this.x = 0;
        if (this.x < 0) this.x = canvas.width;
        if (this.y > canvas.height) this.y = 0;
        if (this.y < 0) this.y = canvas.height;
      }

      draw() {
        if (!ctx) return;

        // Pixel-perfect rendering for bitmap effect
        ctx.fillStyle = this.color;
        ctx.fillRect(
          Math.floor(this.x),
          Math.floor(this.y),
          Math.ceil(this.size),
          Math.ceil(this.size)
        );
      }
    }

    // Create particles
    const particles: Particle[] = [];
    const particleCount = 50;

    for (let i = 0; i < particleCount; i++) {
      particles.push(new Particle());
    }

    // Animation loop
    function animate() {
      if (!ctx) return;

      ctx.clearRect(0, 0, canvas.width, canvas.height);

      // Update and draw particles
      particles.forEach((particle) => {
        particle.update();
        particle.draw();
      });

      // Draw connections between nearby particles
      particles.forEach((a, i) => {
        particles.slice(i + 1).forEach((b) => {
          const dx = a.x - b.x;
          const dy = a.y - b.y;
          const distance = Math.sqrt(dx * dx + dy * dy);

          if (distance < 120) {
            ctx.strokeStyle = `rgba(255, 89, 0, ${1 - distance / 120})`;
            ctx.lineWidth = 1;
            ctx.beginPath();
            ctx.moveTo(Math.floor(a.x), Math.floor(a.y));
            ctx.lineTo(Math.floor(b.x), Math.floor(b.y));
            ctx.stroke();
          }
        });
      });

      requestAnimationFrame(animate);
    }

    animate();
  }

  // Scroll progress bar
  const scrollProgress = document.getElementById("scroll-progress");

  window.addEventListener("scroll", () => {
    if (!scrollProgress) return;

    const windowHeight = window.innerHeight;
    const documentHeight = document.documentElement.scrollHeight - windowHeight;
    const scrolled = window.scrollY;
    const progress = (scrolled / documentHeight) * 100;

    scrollProgress.style.width = `${progress}%`;
  });

  // Add smooth scroll behavior
  document.querySelectorAll('a[href^="#"]').forEach((anchor) => {
    anchor.addEventListener("click", function (e) {
      e.preventDefault();
      const href = this.getAttribute("href");
      if (href) {
        const target = document.querySelector(href);
        if (target) {
          target.scrollIntoView({
            behavior: "smooth",
            block: "start",
          });
        }
      }
    });
  });
</script>
